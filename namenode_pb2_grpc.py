# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import namenode_pb2 as namenode__pb2


class NameNodeServiceStub(object):
    """Servicio NameNode.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendFileToDataNode = channel.unary_unary(
                '/namenode.NameNodeService/SendFileToDataNode',
                request_serializer=namenode__pb2.SendFileToDataNodeRequest.SerializeToString,
                response_deserializer=namenode__pb2.SendFileToDataNodeResponse.FromString,
                )
        self.ReceiveResponseFromDataNode = channel.unary_unary(
                '/namenode.NameNodeService/ReceiveResponseFromDataNode',
                request_serializer=namenode__pb2.ReceiveResponseFromDataNodeRequest.SerializeToString,
                response_deserializer=namenode__pb2.ReceiveResponseFromDataNodeResponse.FromString,
                )
        self.GetFileRegistry = channel.unary_unary(
                '/namenode.NameNodeService/GetFileRegistry',
                request_serializer=namenode__pb2.FileRegistryRequest.SerializeToString,
                response_deserializer=namenode__pb2.FileRegistryResponse.FromString,
                )


class NameNodeServiceServicer(object):
    """Servicio NameNode.
    """

    def SendFileToDataNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveResponseFromDataNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFileRegistry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NameNodeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendFileToDataNode': grpc.unary_unary_rpc_method_handler(
                    servicer.SendFileToDataNode,
                    request_deserializer=namenode__pb2.SendFileToDataNodeRequest.FromString,
                    response_serializer=namenode__pb2.SendFileToDataNodeResponse.SerializeToString,
            ),
            'ReceiveResponseFromDataNode': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveResponseFromDataNode,
                    request_deserializer=namenode__pb2.ReceiveResponseFromDataNodeRequest.FromString,
                    response_serializer=namenode__pb2.ReceiveResponseFromDataNodeResponse.SerializeToString,
            ),
            'GetFileRegistry': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFileRegistry,
                    request_deserializer=namenode__pb2.FileRegistryRequest.FromString,
                    response_serializer=namenode__pb2.FileRegistryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'namenode.NameNodeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NameNodeService(object):
    """Servicio NameNode.
    """

    @staticmethod
    def SendFileToDataNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/namenode.NameNodeService/SendFileToDataNode',
            namenode__pb2.SendFileToDataNodeRequest.SerializeToString,
            namenode__pb2.SendFileToDataNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReceiveResponseFromDataNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/namenode.NameNodeService/ReceiveResponseFromDataNode',
            namenode__pb2.ReceiveResponseFromDataNodeRequest.SerializeToString,
            namenode__pb2.ReceiveResponseFromDataNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFileRegistry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/namenode.NameNodeService/GetFileRegistry',
            namenode__pb2.FileRegistryRequest.SerializeToString,
            namenode__pb2.FileRegistryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
