# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import datanode_pb2 as datanode__pb2


class DataNodeServiceStub(object):
    """Servicio DataNode con las operaciones soportadas.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReplicateData = channel.unary_unary(
                '/datanode.DataNodeService/ReplicateData',
                request_serializer=datanode__pb2.ReplicateDataRequest.SerializeToString,
                response_deserializer=datanode__pb2.ReplicateDataResponse.FromString,
                )
        self.NotifyNameNode = channel.unary_unary(
                '/datanode.DataNodeService/NotifyNameNode',
                request_serializer=datanode__pb2.NotifyNameNodeRequest.SerializeToString,
                response_deserializer=datanode__pb2.NotifyNameNodeResponse.FromString,
                )
        self.ReadFile = channel.unary_unary(
                '/datanode.DataNodeService/ReadFile',
                request_serializer=datanode__pb2.ReadFileRequest.SerializeToString,
                response_deserializer=datanode__pb2.ReadFileResponse.FromString,
                )


class DataNodeServiceServicer(object):
    """Servicio DataNode con las operaciones soportadas.
    """

    def ReplicateData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyNameNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataNodeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReplicateData': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplicateData,
                    request_deserializer=datanode__pb2.ReplicateDataRequest.FromString,
                    response_serializer=datanode__pb2.ReplicateDataResponse.SerializeToString,
            ),
            'NotifyNameNode': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyNameNode,
                    request_deserializer=datanode__pb2.NotifyNameNodeRequest.FromString,
                    response_serializer=datanode__pb2.NotifyNameNodeResponse.SerializeToString,
            ),
            'ReadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadFile,
                    request_deserializer=datanode__pb2.ReadFileRequest.FromString,
                    response_serializer=datanode__pb2.ReadFileResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'datanode.DataNodeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataNodeService(object):
    """Servicio DataNode con las operaciones soportadas.
    """

    @staticmethod
    def ReplicateData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/datanode.DataNodeService/ReplicateData',
            datanode__pb2.ReplicateDataRequest.SerializeToString,
            datanode__pb2.ReplicateDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotifyNameNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/datanode.DataNodeService/NotifyNameNode',
            datanode__pb2.NotifyNameNodeRequest.SerializeToString,
            datanode__pb2.NotifyNameNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/datanode.DataNodeService/ReadFile',
            datanode__pb2.ReadFileRequest.SerializeToString,
            datanode__pb2.ReadFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
